name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CR_PAT: ${{ secrets.CR_PAT }}
  USERNAME: ${{ secrets.USERNAME }}
  TEST_DATABASE: ${{ secrets.TEST_DATABASE }}

jobs:

  build_iengine:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: build_engine
        shell: bash
        run: chmod u+x build/build.sh && build/build.sh -c iengine
      - name: upload iengine package
        uses: actions/upload-artifact@v3
        with:
          name: iengine
          path: iengine/dist/*

  build_manager:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: build_manager
        shell: bash
        run: chmod u+x build/build.sh && build/build.sh -c manager
      - name: upload manager package
        uses: actions/upload-artifact@v3
        with:
          name: manager
          path: manager/dist/*

  build_connectors:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: build_engine
        shell: bash
        run: chmod u+x build/build.sh && build/build.sh -c connectors
      - name: upload connectors package
        uses: actions/upload-artifact@v3
        with:
          name: connectors
          path: connectors/dist/*

  integrate_test:

    runs-on: ubuntu-latest
    needs:
      - build_iengine
      - build_manager
      - build_connectors
    steps:
      - uses: actions/checkout@v3
      - name: create floder
        run: mkdir -p dist/iengine dist/manager dist/plugin-kit dist/connectors
      - name: download iengine package
        uses: actions/download-artifact@v3
        with:
          name: iengine
          path: dist/iengine/
      - name: download manager package
        uses: actions/download-artifact@v3
        with:
          name: manager
          path: dist/manager/
      - name: download connectors package
        uses: actions/download-artifact@v3
        with:
          name: connectors
          path: dist/connectors/
      - name: run integrate test
        run: ls -al

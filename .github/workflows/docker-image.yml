name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build_iengine:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - shell: bash
        env:
          CR_PAT: ${{ secrets.CR_PAT }}
          USERNAME: ${{ secrets.USERNAME }}
        run: chmod u+x ./build/build.sh && ./build/build.sh -c iengine
             exit $?
      - name: compire iengine
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./iengine/dist

  build_manager:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - shell: bash
        env:
          CR_PAT: ${{ secrets.CR_PAT }}
          USERNAME: ${{ secrets.USERNAME }}
        run: chmod u+x ./build/build.sh && ./build/build.sh -c manager
             exit $?
      - name: compire manager
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./manager/dist

  build_plugin-kit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - shell: bash
        env:
          CR_PAT: ${{ secrets.CR_PAT }}
          USERNAME: ${{ secrets.USERNAME }}
        run: chmod u+x ./build/build.sh && ./build/build.sh -c plugin-kit
             exit $?
      - name: compire plugin-kit
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./plugin-kit/dist

  build_connectors:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - shell: bash
        env:
          CR_PAT: ${{ secrets.CR_PAT }}
          USERNAME: ${{ secrets.USERNAME }}
        run: chmod u+x ./build/build.sh && ./build/build.sh -c connectors
             exit $?
      - name: compire connectors
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./connectors/dist

  unittest:
    runs-on: ubuntu-latest
    needs: [build_iengine, build_manager, build_connectors, build_plugin-kit]
    steps:
      - uses: actions/checkout@v3
      - name: run unittest test
        run: id

  integration_test:
    runs-on: ubuntu-latest
    needs: [build_iengine, build_manager, build_connectors, build_plugin-kit]
    steps:
    - name: run integration test
      uses: actions/checkout@v3
      with:
        name: dist
      env:
        CR_PAT: ${{ secrets.CR_PAT }}
        USERNAME: ${{ secrets.USERNAME }}
    - run: chmod u+x build/quick-test.sh && bash build/quick-test.sh
           exit $?
 
  deploy:
    runs-on: ubuntu-latest
    needs: [unittest, integration_test]
    steps:
      - uses: actions/checkout@v3
      - name: build and publish image
        run: ls -al

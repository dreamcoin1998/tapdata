name: LDP Continuous Integration

on:
  push:
    branches: [ "master", "release-v*.*.*", "develop-v*.*.0" ]
  pull_request:
    branches: [ "master", "release-v*.*.*", "develop-v*.*.0" ]
  workflow_dispatch:
    inputs:
      frontbranch:
        description: "frontend branch"
        default: 'warning' 
        required: true
        type: string
      tapdata_opensource_branch:
        description: "tapdata opensource branch"
        default: 'warning' 
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  TEST_DATABASE: ${{ secrets.TEST_DATABASE }}
  FEISHU_BOT_SECRET: ${{ secrets.FEISHU_BOT_SECRET }}
  FEISHU_BOT_WEBHOOK: ${{ secrets.FEISHU_BOT_WEBHOOK }}
  FEISHU_PERSON_IN_CHARGE: ${{ secrets.FEISHU_PERSON_IN_CHARGE }}

jobs:

  Code-Style-Check:
    runs-on: ubuntu-latest
    steps:
      - name: check commit message
        if: (!startsWith(github.event.head_commit.message, 'feat')) && 
            (!startsWith(github.event.head_commit.message, 'fix')) &&
            (!startsWith(github.event.head_commit.message, 'refactor')) &&
            (!startsWith(github.event.head_commit.message, 'test')) &&
            (!startsWith(github.event.head_commit.message, 'chore')) &&
            (!startsWith(github.event.head_commit.message, 'Merge'))
        run: echo ${{ github.event.head_commit.message }} exit 1

  Integration-Testing:
    runs-on: ubuntu-latest
    needs: Code-Style-Check
    steps:
      - uses: actions/checkout@v3
      - name: Login to the github container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: get test history
        uses: actions/checkout@v2
        if: always()
        continue-on-error: true
        with:
          ref: report-test
          path: report-test
      - name: compile iengine modules
        run: |
          chmod u+x build/build.sh 
          build/build.sh -c iengine
      - name: compile manager module
        run:
          build/build.sh -c manager
      - name: compile plugin-kit module
        run:
          build/build.sh -c plugin-kit
      - name: compile connectors module
        run:
          build/build.sh -c connectors
      - name: package module and make image
        run: build/build.sh -p 1 -o image
      - name: run unittest
        run: ls -al
      - name: run integrate test
        env:
          RUN_ID: ${{ github.run_id }}
          RUN_NUMBER: ${{ github.run_number }}
          RUN_SIGN: ${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}
          BRANCH: ${{ github.ref }}
        run: chmod u+x build/quick-test.sh && build/quick-test.sh && ls -al ./tapshell/test/report/integrate.html/

      - name: update github page
        id: gh_pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: report-test
          publish_dir: gh_pages
          keep_files: true
      - name: print summary
        if: ${{ steps.gh_pages.conclusion == 'success' }}
        env:
          RUN_SIGN: ${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}
          BRANCH: ${{ github.ref }}
        run: |
          BRANCH_DIR=`echo $BRANCH | sed "s:/:-:g"`
          echo "[Click to view test report](https://tapdata.github.io/tapdata/$BRANCH_DIR/$RUN_SIGN)" >> $GITHUB_STEP_SUMMARY
      - name: send notices to feishu
        if : ${{ failure() }}
        run: |
          pip3 install requests GitPython
          python3 build/feishu_notice.py \
            --branch ${{ env.CURRENT_BRANCH}} \
            --job "LDP Enterprise Continuous Integration" \
            --secret ${{ env.FEISHU_BOT_SECRET }} \
            --bot_webhook ${{ env.FEISHU_BOT_WEBHOOK }} \
            --token ${{ secrets.GITHUB_TOKEN }} \
            --job_id Build \
            --person_in_charge ${{ secret.FEISHU_PERSON_IN_CHARGE }} \
            --detail_message "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
